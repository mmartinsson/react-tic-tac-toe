{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","map","row","index","renderSquare","React","Component","Game","state","history","Array","fill","lastSelectedIndex","moveNumber","xIsNext","selectedIndex","slice","length","calculateWinner","setState","concat","winner","filter","Boolean","nextPlayer","current","moves","board","moveIndex","player","column","Math","floor","jumpToAfter","handleClick","status","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"4OAIA,SAASA,EAAOC,GACZ,OACE,wBAAQC,UAAU,SAASC,QAASF,EAAME,QAA1C,SACKF,EAAMG,Q,IAKXC,E,2KACSC,GAAI,IAAD,OACd,OAAO,cAACN,EAAD,CACLI,MAAOG,KAAKN,MAAMO,QAAQF,GAC1BH,QAAS,kBAAM,EAAKF,MAAME,QAAQG,Q,+BAI5B,IAAD,OAOP,OACE,8BAPc,CACd,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAMKG,KAAI,SAACC,GAAD,OACR,qBAAKR,UAAU,YAAf,SACGQ,EAAID,KAAI,SAAAE,GAAK,OAAI,EAAKC,aAAaD,iB,GApBhCE,IAAMC,WA6BpBC,E,kDACJ,WAAYd,GAAQ,IAAD,8BACjB,cAAMA,IACDe,MAAQ,CACXC,QAAS,CAAC,CACRT,QAASU,MAAM,GAAGC,KAAK,MACvBC,kBAAmB,OAErBC,WAAY,EACZC,SAAS,GARM,E,wDAYPC,GACV,IAAMN,EAAUV,KAAKS,MAAMC,QAAQO,MAAM,EAAGjB,KAAKS,MAAMK,WAAa,GAE9Db,EADUS,EAAQA,EAAQQ,OAAS,GACjBjB,QAAQgB,QAC7BE,EAAgBlB,IAAYA,EAAQe,KAGvCf,EAAQe,GAAiBhB,KAAKS,MAAMM,QAAU,IAAM,IACpDf,KAAKoB,SAAS,CACZV,QAASA,EAAQW,OAAO,CAAC,CACvBpB,QAASA,EACTY,kBAAmBG,KAErBF,WAAYJ,EAAQQ,OACpBH,SAAUf,KAAKS,MAAMM,a,kCAIbD,GACVd,KAAKoB,SAAS,CACZN,WAAYA,EACZC,QAAUD,EAAa,IAAO,M,6BAI3Bb,GACL,IAAMqB,EAASH,EAAgBlB,GACzBa,EAAab,EAAQsB,OAAOC,SAASN,OACrCO,EAAaX,EAAa,EAAI,IAAM,IAE1C,OAAGQ,EACK,UAAN,OAAiBA,EAAjB,SACuB,IAAfR,EACD,uBAED,gBAAN,OAAuBW,K,+BAIjB,IAAD,OACDf,EAAUV,KAAKS,MAAMC,QACrBgB,EAAUhB,EAAQV,KAAKS,MAAMK,YAE7Ba,EAAQjB,EAAQO,MAAM,GAAGf,KAAI,SAAC0B,EAAOC,GACzC,IAAMf,EAAae,EAAY,EACzBC,EAAShB,EAAa,EAAI,IAAM,IAChCiB,EAAUH,EAAMf,kBAAoB,EAAK,EACzCV,EAAM6B,KAAKC,MAAML,EAAMf,kBAAoB,GAAK,EAChDlB,EAAYkC,IAAc,EAAKpB,MAAMK,WAAW,EAAI,WAAa,eAEvE,OACE,qBAAInB,UAAWA,EAAf,UACE,0CAAamC,EAAb,oBAAsCC,EAAtC,QAAmD5B,KACnD,wBACIR,UAAU,iBACVC,QAAS,kBAAM,EAAKsC,YAAYpB,IAFpC,SAEkD,sBAJrBA,MAUnC,OACE,sBAAKnB,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACG,EAAD,CACEG,QAASyB,EAAQzB,QACjBL,QAAS,SAACG,GAAD,OAAO,EAAKoC,YAAYpC,QAGrC,sBAAKJ,UAAU,YAAf,UACE,qBAAKA,UAAU,SAAf,SAAyBK,KAAKoC,OAAOV,EAAQzB,WAC7C,wBAAQL,QAAS,kBAAM,EAAKsC,YAAY,IAAxC,8BACA,6BAAKP,c,GArFIrB,IAAMC,WAiGzB,SAASY,EAAgBlB,GAWvB,IAVA,IAAMoC,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAtC,EAAI,EAAGA,EAAIsC,EAAMnB,OAAQnB,IAAK,CAAC,IAAD,cACnBsC,EAAMtC,GADa,GAC9BuC,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAIvC,EAAQqC,IAAMrC,EAAQqC,KAAOrC,EAAQsC,IAAMtC,EAAQqC,KAAOrC,EAAQuC,GACpE,OAAOvC,EAAQqC,GAGnB,OAAO,KAtBTG,IAASC,OACP,cAAClC,EAAD,IACAmC,SAASC,eAAe,W","file":"static/js/main.a3773733.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props) {\r\n    return (\r\n      <button className=\"square\" onClick={props.onClick}>\r\n          {props.value}\r\n      </button>\r\n    )\r\n}\r\n\r\nclass Board extends React.Component {\r\n  renderSquare(i) {\r\n    return <Square\r\n      value={this.props.squares[i]}\r\n      onClick={() => this.props.onClick(i)}\r\n    />;\r\n  }\r\n\r\n  render() {\r\n    const squares = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8]\r\n    ]\r\n\r\n    return (\r\n      <div>\r\n        {\r\n          squares.map((row) => (\r\n              <div className=\"board-row\">\r\n                {row.map(index => this.renderSquare(index))}\r\n              </div>\r\n          ))\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      history: [{\r\n        squares: Array(9).fill(null),\r\n        lastSelectedIndex: null\r\n      }],\r\n      moveNumber: 0,\r\n      xIsNext: true\r\n    }\r\n  }\r\n\r\n  handleClick(selectedIndex) {\r\n    const history = this.state.history.slice(0, this.state.moveNumber + 1)\r\n    const current = history[history.length - 1]\r\n    const squares = current.squares.slice()\r\n    if(calculateWinner(squares) || squares[selectedIndex]) {\r\n      return\r\n    }\r\n    squares[selectedIndex] = this.state.xIsNext ? 'X' : 'O'\r\n    this.setState({\r\n      history: history.concat([{\r\n        squares: squares,\r\n        lastSelectedIndex: selectedIndex\r\n      }]),\r\n      moveNumber: history.length,\r\n      xIsNext: !this.state.xIsNext\r\n    })\r\n  }\r\n\r\n  jumpToAfter(moveNumber) {\r\n    this.setState({\r\n      moveNumber: moveNumber,\r\n      xIsNext: (moveNumber % 2) === 0\r\n    })\r\n  }\r\n\r\n  status(squares) {\r\n    const winner = calculateWinner(squares)\r\n    const moveNumber = squares.filter(Boolean).length\r\n    const nextPlayer = moveNumber % 2 ? 'O' : 'X'\r\n\r\n    if(winner) {\r\n      return `Player ${winner} won!`\r\n    } else if(moveNumber === 9) {\r\n      return 'The match was a draw'\r\n    } else {\r\n      return `Next player: ${nextPlayer}`\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history\r\n    const current = history[this.state.moveNumber]\r\n\r\n    const moves = history.slice(1).map((board, moveIndex) => {\r\n      const moveNumber = moveIndex + 1\r\n      const player = moveNumber % 2 ? 'X' : 'O'\r\n      const column = (board.lastSelectedIndex % 3) + 1\r\n      const row = Math.floor(board.lastSelectedIndex / 3) + 1\r\n      const className = moveIndex === this.state.moveNumber-1 ? \"selected\" : \"not-selected\"\r\n\r\n      return (\r\n        <li className={className} key={moveNumber}>\r\n          <div>Player {player} selected column {column} row {row}</div>\r\n          <button\r\n              className=\"history-button\"\r\n              onClick={() => this.jumpToAfter(moveNumber)}>{'Go to this move'}\r\n          </button>\r\n        </li>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            squares={current.squares}\r\n            onClick={(i) => this.handleClick(i)}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div className=\"status\">{this.status(current.squares)}</div>\r\n          <button onClick={() => this.jumpToAfter(0)}>Go to game start</button>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n"],"sourceRoot":""}